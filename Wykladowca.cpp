//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Wykladowca.cpp
//  @ Date : 25.05.2023
//  @ Author : 
//
//


#include "Wykladowca.h"
#include "Uczelnia.h"

Wykladowca::Wykladowca() {
    name = "null";
    login = "null";
    haslo = "null";
}

Wykladowca::~Wykladowca() {

}

Kurs Wykladowca::UtworzKurs(const std::string& name) {
    Kurs nowyKurs;
    nowyKurs.Nazwa = name;
    std::cout << "Utworzono nowy kurs: " << name << std::endl;
    this->nazwyKursow.push_back(name);
    return nowyKurs;
}

void Wykladowca::ModyfikujKurs(Kurs kurs, const std::string& newName, const std::vector<std::string>& newTematy) {
    if (!newName.empty()) {
        kurs.Nazwa = newName;
        std::cout << "Zmieniono nazwe kursu na: " << newName << std::endl;
    }

    if (!newTematy.empty()) {
        kurs.Tematy = newTematy;
        std::cout << "Zmieniono tematy kursu." << std::endl;
    }
}


void Wykladowca::WystawOcene(Kurs kurs, int studentId, int ocena) {
    for (int student : kurs.studentId) {
        if (student == studentId) {
            kurs.oceny.emplace_back(studentId, ocena); // Dodanie elementu na końcu wektora oceny
            std::cout << "Wystawiono ocenę " << ocena << " dla studenta o ID: " << studentId << " w kursie " << kurs.Nazwa << std::endl;
            return;
        }
    }
    std::cout << "Nie znaleziono studenta o ID: " << studentId << " w kursie " << kurs.Nazwa << std::endl;
}



